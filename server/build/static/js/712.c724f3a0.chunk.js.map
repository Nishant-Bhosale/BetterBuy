{"version":3,"file":"static/js/712.c724f3a0.chunk.js","mappings":"qIACA,MAAuB,uB,SCiBvB,EAhBiB,WACf,OACE,gBACEA,MAAM,6BACNC,QAAQ,eACRC,UAAWC,EAAY,UAEvB,iBACEC,KAAK,UACLC,YAAY,IACZC,EAAE,+SAIV,C,yJCqFA,UA5Fc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,UACXC,GAAcD,EAAAA,EAAAA,UACdE,GAAWC,EAAAA,EAAAA,MAEjB,GACEC,EAAAA,EAAAA,YAAWC,EAAAA,GADLC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAGxCC,EAAa,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,OAErBC,EAAAA,EAAAA,YAAU,WACJF,GACFV,EAAS,KAGPM,IACFO,EAAAA,GAAAA,MAAYN,GACZE,IAEJ,GAAG,CAACH,EAAOF,IAEX,IAAMU,EAAe,yCAAG,WAAOC,GAAC,8EAIgB,GAH9CA,EAAEC,iBAEIC,EAAWpB,EAASqB,QAAQC,MAC5BC,EAAcrB,EAAYmB,QAAQC,QAEvB,KAAbF,GAAmC,KAAhBG,GAAsBA,EAAYC,OAAS,GAAC,yCAC1DR,EAAAA,GAAAA,MAAY,6BAA2B,uBAG1CL,EAAMS,EAAUG,GAAa,KAAD,sCACnC,gBAXoB,sCAarB,OACE,+BACE,iBAAK5B,UAAU,YAAW,WACxB,UAAC,KAAG,CAACA,UAAU,eAAc,WAC3B,SAAC,KAAG,CAAC8B,GAAI,EAAG9B,UAAU,eAAc,UAClC,gBACE+B,IAAKC,EACLC,IAAI,OACJjC,UAAU,OACVkC,OAAO,OACPC,MAAM,YAGV,SAAC,KAAG,CAACL,GAAI,EAAE,UACT,UAAC,KAAI,CAAC9B,UAAU,aAAaoC,SAAU,SAACb,GAAC,OAAKD,EAAgBC,EAAE,EAAC,WAC/D,eAAIvB,UAAU,cAAa,SAAC,WAC5B,SAAC,KAAS,WACR,SAAC,KAAK,CACJqC,KAAK,QACLC,SAAUjC,EACVkC,YAAY,cACZvC,UAAU,mBAGd,SAAC,KAAS,WACR,SAAC,KAAK,CACJqC,KAAK,WACLC,SAAU/B,EACVgC,YAAY,iBACZvC,UAAU,cACVwC,UAAW,OAGf,SAAC,KAAM,CAACxC,UAAU,YAAW,UAC3B,0BAAOa,GAAU,SAAC,KAAO,CAAC4B,MAAM,UAAa,aAG/C,SAAC,KAAO,CACNC,GAAG,UACHC,MAAO,CACLC,eAAgB,OAChBH,MAAO,UACPI,WAAY,aACZ,UAEF,cAAGF,MAAO,CAAEG,WAAY,OAAQC,WAAY,MAAOC,OAAQ,GAAI,SAAC,iCAOxE,SAAC,IAAQ,QAIjB,C","sources":["webpack://client/./src/components/UI/Wave/WaveBack.module.css?7d26","components/UI/Wave/WaveBack.js","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wave\":\"WaveBack_wave__t5pRP\"};","import styles from \"./WaveBack.module.css\";\r\n\r\nconst WaveBack = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 1440 320\"\r\n      className={styles.wave}\r\n    >\r\n      <path\r\n        fill=\"#5000ca\"\r\n        fillOpacity=\"1\"\r\n        d=\"M0,128L48,144C96,160,192,192,288,186.7C384,181,480,139,576,144C672,149,768,203,864,213.3C960,224,1056,192,1152,192C1248,192,1344,224,1392,240L1440,256L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default WaveBack;\r\n","import { toast } from \"react-toastify\";\r\nimport { useEffect, useRef, useContext } from \"react\";\r\nimport { Button, Col, FormGroup, Row, Form, Input, Spinner } from \"reactstrap\";\r\nimport WaveBack from \"../../components/UI/Wave/WaveBack\";\r\nimport EcommerceImage from \"../../assets/ecom_image.jpg\";\r\nimport AuthContext from \"../../context/Auth/AuthContext\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport \"./login.css\";\r\n\r\nconst Login = () => {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const navigate = useNavigate();\r\n\r\n  const { user, loading, error, message, login, clearError } =\r\n    useContext(AuthContext);\r\n\r\n  const isAuth = user?.token;\r\n\r\n  useEffect(() => {\r\n    if (isAuth) {\r\n      navigate(\"/\");\r\n    }\r\n\r\n    if (error) {\r\n      toast.error(message);\r\n      clearError();\r\n    }\r\n  }, [error, user]);\r\n\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const emailVal = emailRef.current.value;\r\n    const passwordVal = passwordRef.current.value;\r\n\r\n    if (emailVal === \"\" || passwordVal === \"\" || passwordVal.length < 6) {\r\n      return toast.error(\"Please enter valid data!\");\r\n    }\r\n\r\n    await login(emailVal, passwordVal);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"loginpage\">\r\n        <Row className=\"loginPageRow\">\r\n          <Col md={6} className=\"hero-section\">\r\n            <img\r\n              src={EcommerceImage}\r\n              alt=\"ecom\"\r\n              className=\"ecom\"\r\n              height=\"100%\"\r\n              width=\"100%\"\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form className=\"login-form\" onSubmit={(e) => onSubmitHandler(e)}>\r\n              <h2 className=\"login-title\">Login</h2>\r\n              <FormGroup>\r\n                <Input\r\n                  type=\"email\"\r\n                  innerRef={emailRef}\r\n                  placeholder=\"Enter Email\"\r\n                  className=\"login-input\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Input\r\n                  type=\"password\"\r\n                  innerRef={passwordRef}\r\n                  placeholder=\"Enter Password\"\r\n                  className=\"login-input\"\r\n                  minLength={6}\r\n                />\r\n              </FormGroup>\r\n              <Button className=\"login-btn\">\r\n                <span>{loading ? <Spinner color=\"light\" /> : \"Login\"}</span>\r\n              </Button>\r\n\r\n              <NavLink\r\n                to=\"/signup\"\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: \"#224957\",\r\n                  fontFamily: \"Quicksand\",\r\n                }}\r\n              >\r\n                <p style={{ paddingTop: \"10px\", fontWeight: \"600\", margin: 0 }}>\r\n                  Or SignUp instead\r\n                </p>\r\n              </NavLink>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        <WaveBack />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["xmlns","viewBox","className","styles","fill","fillOpacity","d","emailRef","useRef","passwordRef","navigate","useNavigate","useContext","AuthContext","user","loading","error","message","login","clearError","isAuth","token","useEffect","toast","onSubmitHandler","e","preventDefault","emailVal","current","value","passwordVal","length","md","src","EcommerceImage","alt","height","width","onSubmit","type","innerRef","placeholder","minLength","color","to","style","textDecoration","fontFamily","paddingTop","fontWeight","margin"],"sourceRoot":""}